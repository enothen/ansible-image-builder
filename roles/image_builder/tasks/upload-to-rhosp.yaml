- name: Get previous composes
  ansible.builtin.import_role:
    name: image_builder
    tasks_from: get-composes
  when: compose_request is undefined

- name: Verify compose request is finished
  ansible.builtin.uri:
    url: "{{ api_endpoint }}/composes/{{ item.json.id }}"
    method: GET
    headers:
      Authorization: Bearer {{ refresh_token.json.access_token }}
    status_code: 200
  loop: "{{ compose_request.results | default([]) }}"
  loop_control:
    label: "{{  image_name }}: compose_status: {{ compose_status }}, upload_status: {{ upload_status }}"
  vars:
    image_name: "{{ item.invocation.module_args.body.image_name | default('N/A') }}"
    compose_status: "{{ compose_status_request.json.image_status.status | default(False) }}"
    upload_status: "{{ compose_status_request.json.image_status.upload_status.status | default(False) }}"
  register: compose_status_request
  when: item.json is defined
  until:
    - compose_status != "building"
    - upload_status == "success"
  retries: 20
  delay: 60

- name: Upload images to rhosp
  openstack.cloud.image:
    name: "{{ item.name }}"
    id: "{{ (compose_status_request.results | selectattr('json.request.image_name', 'match', item.name) | map(attribute='item.json.id') | first) | default(omit) }}"
    container_format: "{{ item.disk_format | default('bare') }}"
    disk_format: "{{ item.disk_format | default('qcow2') }}"
    state: "{{ item.state | default('present') }}"
    filename: "{{ storage_dir | default('.') }}/{{ item.name }}-{{ item.release_id }}.qcow2"
    tags: "{{ (item.tags | default([])) + [item.release_id] | default(omit) }}"
    properties: "{{ item.properties | default(omit) }}"
  loop: "{{ images }}"
  loop_control:
    label: "{{ item.name }}"
