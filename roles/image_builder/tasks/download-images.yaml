---
- name: Set fact with release_str if release_id is set
  ansible.builtin.set_fact:
    release_str: "-{{ release_id }}"
  when: release_id is defined

- name: Start image download
  ansible.builtin.get_url:
    url: "{{ image_url }}"
    dest: "{{ path }}"
    mode: "0644"
  loop: "{{ compose_status_request.results }}"
  loop_control:
    label: "{{ path | default('N/A') }}"
  when:
    - item.json is defined
    - item.json.image_status.status == "success"
    - item.json.image_status.upload_status.status == "success"
    - image_url
  vars:
    image_url: "{{ item.json.image_status.upload_status.options.url | default(False) }}"
    requested_type: "{{ item.json.request.image_requests[0].image_type }}"
    file_name: "{{ item.json.request.image_name }}{{ release_str | default('') }}"
    file_extension: "{{ image_type_to_extension[requested_type] | default(requested_type) }}"
    path: "{{ storage_dir }}/{{ file_name }}.{{ file_extension }}"
  async: 600
  poll: 0
  register: download

- name: Confirm image download completed
  ansible.builtin.async_status:
    jid: "{{ jobid }}"
  register: job_result
  when: jobid
  until: job_result.finished
  retries: 10
  delay: 60
  loop: "{{ download.results }}"
  loop_control:
    label: "{{ item.item.json.request.image_name | default('N/A') }}"
  vars:
    jobid: "{{ item.ansible_job_id | default(false) }}"
